version=@project.version@
artifactId=@project.artifactId@
groupId=@project.groupId@
finalName=@project.build.finalName@

server.port=8080

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://192.168.56.101:3306/device_context
spring.datasource.username=root
spring.datasource.password=xxxxx
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=false
spring.jpa.use_sql_comments=false
spring.jpa.format_sql=false
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# logging level
#logging.level.org.springframework=INFO
#logging.level.com.brodos.dhl.routingcode=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.file=logs/routingcode-service.log
#logging.pattern.file=%d %p %c{1.} [%t] %m%n
#logging.pattern.console=
#logging.level=INFO

logging.config=log4j2.properties

management.endpoint.shutdown.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
management.metrics.enable.all=true
#management.metrics.distribution.percentiles-histogram.http.server.requests=true
#management.metrics.distribution.sla.http.server.requests=1ms,5ms