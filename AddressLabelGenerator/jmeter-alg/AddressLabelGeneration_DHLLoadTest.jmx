<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ALG Load Test for different versionS and multiple requests" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DHL Standard  V2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(alg_url)}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(alg_proto)}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__P(alg_path)}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="1187591410">documentFormat</stringProp>
            <stringProp name="-1797003186">printSize</stringProp>
            <stringProp name="-1116736688">DHLStandardClient</stringProp>
            <stringProp name="1437126153">freightForwarderType</stringProp>
            <stringProp name="-1429160438">DHLStandardProduct</stringProp>
            <stringProp name="1799995770">shipmentReferenceNumber</stringProp>
            <stringProp name="1828026780">billingNo</stringProp>
            <stringProp name="681469378">deliveryDate</stringProp>
            <stringProp name="-705557851">deliveryTimeRangeIdentifier</stringProp>
            <stringProp name="-17910476">amountInLowestDenomination</stringProp>
            <stringProp name="575402001">currency</stringProp>
            <stringProp name="1107708910">weightInIntegerRepresentation</stringProp>
            <stringProp name="3594628">unit</stringProp>
            <stringProp name="-725101079">totalNoOfPackages</stringProp>
            <stringProp name="51261331">packageNoOutOfTotalPackages</stringProp>
            <stringProp name="1177837442">deliveryTimestamp</stringProp>
            <stringProp name="1385062852">sender.company</stringProp>
            <stringProp name="-194403827">sender.name1</stringProp>
            <stringProp name="-194403826">sender.name2</stringProp>
            <stringProp name="-1570708004">sender.street</stringProp>
            <stringProp name="1392409821">sender.country</stringProp>
            <stringProp name="385625888">sender.isCountryCode</stringProp>
            <stringProp name="-779435343">sender.postalCode</stringProp>
            <stringProp name="824693124">sender.city</stringProp>
            <stringProp name="1535094344">sender.houseNo</stringProp>
            <stringProp name="-160904938">sender.phoneNo</stringProp>
            <stringProp name="-1759799896">recipient.company</stringProp>
            <stringProp name="1236958961">recipient.name1</stringProp>
            <stringProp name="1236958962">recipient.name2</stringProp>
            <stringProp name="-148134536">recipient.street</stringProp>
            <stringProp name="-1752452927">recipient.country</stringProp>
            <stringProp name="-123475964">recipient.isCountryCode</stringProp>
            <stringProp name="1031033933">recipient.postalCode</stringProp>
            <stringProp name="-376059872">recipient.city</stringProp>
            <stringProp name="-1609768404">recipient.houseNo</stringProp>
            <stringProp name="989199610">recipient.phoneNo</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1677167653">
              <stringProp name="110834">pdf</stringProp>
              <stringProp name="-1623603473">LASERPRINTER</stringProp>
              <stringProp name="1658770677">MEDION1</stringProp>
              <stringProp name="67656">DHL</stringProp>
              <stringProp name="-208140076">DHL_STANDARD</stringProp>
              <stringProp name="1450572544">123145</stringProp>
              <stringProp name="1450575459">123456</stringProp>
              <stringProp name="2081545189">2019-07-06</stringProp>
              <stringProp name="47728">022</stringProp>
              <stringProp name="48690">123</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="1601787">4560</stringProp>
              <stringProp name="103">g</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1579865628">2019-07-0314:40:39+0000</stringProp>
              <stringProp name="67887555">Firma</stringProp>
              <stringProp name="645739530">MEDION AG</stringProp>
              <stringProp name="-615225696">c/o Brodos AG</stringProp>
              <stringProp name="1003322981">ErlangerStr.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
              <stringProp name="48013522">Herr/Frau</stringProp>
              <stringProp name="-872744469">Maximilian</stringProp>
              <stringProp name="-1834305558">Mustermann</stringProp>
              <stringProp name="990162741">Erlanger Str.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without shipmentReferenceNumber, Billing No" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;&#xd;
     &#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">self</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$self</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with Null billingNo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:      &#xd;
      {&#xd;
         &quot;billingNo&quot;: &quot;&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without shipmentReferenceNumber" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
         &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
        &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;,&#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
    &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with only Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
         &#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with only Date" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\Jmeter\Projects\filename1.TXT</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DHL Standard  V1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(alg_url)}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(alg_proto)}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__P(alg_path)}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="1187591410">documentFormat</stringProp>
            <stringProp name="-1797003186">printSize</stringProp>
            <stringProp name="-1116736688">DHLStandardClient</stringProp>
            <stringProp name="1437126153">freightForwarderType</stringProp>
            <stringProp name="-1429160438">DHLStandardProduct</stringProp>
            <stringProp name="1799995770">shipmentReferenceNumber</stringProp>
            <stringProp name="1828026780">billingNo</stringProp>
            <stringProp name="681469378">deliveryDate</stringProp>
            <stringProp name="-705557851">deliveryTimeRangeIdentifier</stringProp>
            <stringProp name="-17910476">amountInLowestDenomination</stringProp>
            <stringProp name="575402001">currency</stringProp>
            <stringProp name="1107708910">weightInIntegerRepresentation</stringProp>
            <stringProp name="3594628">unit</stringProp>
            <stringProp name="-725101079">totalNoOfPackages</stringProp>
            <stringProp name="51261331">packageNoOutOfTotalPackages</stringProp>
            <stringProp name="1177837442">deliveryTimestamp</stringProp>
            <stringProp name="1385062852">sender.company</stringProp>
            <stringProp name="-194403827">sender.name1</stringProp>
            <stringProp name="-194403826">sender.name2</stringProp>
            <stringProp name="-1570708004">sender.street</stringProp>
            <stringProp name="1392409821">sender.country</stringProp>
            <stringProp name="385625888">sender.isCountryCode</stringProp>
            <stringProp name="-779435343">sender.postalCode</stringProp>
            <stringProp name="824693124">sender.city</stringProp>
            <stringProp name="1535094344">sender.houseNo</stringProp>
            <stringProp name="-160904938">sender.phoneNo</stringProp>
            <stringProp name="-1759799896">recipient.company</stringProp>
            <stringProp name="1236958961">recipient.name1</stringProp>
            <stringProp name="1236958962">recipient.name2</stringProp>
            <stringProp name="-148134536">recipient.street</stringProp>
            <stringProp name="-1752452927">recipient.country</stringProp>
            <stringProp name="-123475964">recipient.isCountryCode</stringProp>
            <stringProp name="1031033933">recipient.postalCode</stringProp>
            <stringProp name="-376059872">recipient.city</stringProp>
            <stringProp name="-1609768404">recipient.houseNo</stringProp>
            <stringProp name="989199610">recipient.phoneNo</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1677167653">
              <stringProp name="110834">pdf</stringProp>
              <stringProp name="-1623603473">LASERPRINTER</stringProp>
              <stringProp name="1658770677">MEDION1</stringProp>
              <stringProp name="67656">DHL</stringProp>
              <stringProp name="-208140076">DHL_STANDARD</stringProp>
              <stringProp name="1450572544">123145</stringProp>
              <stringProp name="1450575459">123456</stringProp>
              <stringProp name="2081545189">2019-07-06</stringProp>
              <stringProp name="47728">022</stringProp>
              <stringProp name="48690">123</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="1601787">4560</stringProp>
              <stringProp name="103">g</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1579865628">2019-07-0314:40:39+0000</stringProp>
              <stringProp name="67887555">Firma</stringProp>
              <stringProp name="645739530">MEDION AG</stringProp>
              <stringProp name="-615225696">c/o Brodos AG</stringProp>
              <stringProp name="1003322981">ErlangerStr.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
              <stringProp name="48013522">Herr/Frau</stringProp>
              <stringProp name="-872744469">Maximilian</stringProp>
              <stringProp name="-1834305558">Mustermann</stringProp>
              <stringProp name="990162741">Erlanger Str.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without shipmentReferenceNumber, Billing No" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;&#xd;
     &#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
  &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with Null billingNo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:      &#xd;
      {&#xd;
         &quot;billingNo&quot;: &quot;&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
  &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without shipmentReferenceNumber" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
         &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
        &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;,&#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with only Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
         &#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with only Date" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
  &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DHL Standard  " enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(alg_url)}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(alg_proto)}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__P(alg_path)}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="1187591410">documentFormat</stringProp>
            <stringProp name="-1797003186">printSize</stringProp>
            <stringProp name="-1116736688">DHLStandardClient</stringProp>
            <stringProp name="1437126153">freightForwarderType</stringProp>
            <stringProp name="-1429160438">DHLStandardProduct</stringProp>
            <stringProp name="1799995770">shipmentReferenceNumber</stringProp>
            <stringProp name="1828026780">billingNo</stringProp>
            <stringProp name="681469378">deliveryDate</stringProp>
            <stringProp name="-705557851">deliveryTimeRangeIdentifier</stringProp>
            <stringProp name="-17910476">amountInLowestDenomination</stringProp>
            <stringProp name="575402001">currency</stringProp>
            <stringProp name="1107708910">weightInIntegerRepresentation</stringProp>
            <stringProp name="3594628">unit</stringProp>
            <stringProp name="-725101079">totalNoOfPackages</stringProp>
            <stringProp name="51261331">packageNoOutOfTotalPackages</stringProp>
            <stringProp name="1177837442">deliveryTimestamp</stringProp>
            <stringProp name="1385062852">sender.company</stringProp>
            <stringProp name="-194403827">sender.name1</stringProp>
            <stringProp name="-194403826">sender.name2</stringProp>
            <stringProp name="-1570708004">sender.street</stringProp>
            <stringProp name="1392409821">sender.country</stringProp>
            <stringProp name="385625888">sender.isCountryCode</stringProp>
            <stringProp name="-779435343">sender.postalCode</stringProp>
            <stringProp name="824693124">sender.city</stringProp>
            <stringProp name="1535094344">sender.houseNo</stringProp>
            <stringProp name="-160904938">sender.phoneNo</stringProp>
            <stringProp name="-1759799896">recipient.company</stringProp>
            <stringProp name="1236958961">recipient.name1</stringProp>
            <stringProp name="1236958962">recipient.name2</stringProp>
            <stringProp name="-148134536">recipient.street</stringProp>
            <stringProp name="-1752452927">recipient.country</stringProp>
            <stringProp name="-123475964">recipient.isCountryCode</stringProp>
            <stringProp name="1031033933">recipient.postalCode</stringProp>
            <stringProp name="-376059872">recipient.city</stringProp>
            <stringProp name="-1609768404">recipient.houseNo</stringProp>
            <stringProp name="989199610">recipient.phoneNo</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1677167653">
              <stringProp name="110834">pdf</stringProp>
              <stringProp name="-1623603473">LASERPRINTER</stringProp>
              <stringProp name="1658770677">MEDION1</stringProp>
              <stringProp name="67656">DHL</stringProp>
              <stringProp name="-208140076">DHL_STANDARD</stringProp>
              <stringProp name="1450572544">123145</stringProp>
              <stringProp name="1450575459">123456</stringProp>
              <stringProp name="2081545189">2019-07-06</stringProp>
              <stringProp name="47728">022</stringProp>
              <stringProp name="48690">123</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="1601787">4560</stringProp>
              <stringProp name="103">g</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1579865628">2019-07-0314:40:39+0000</stringProp>
              <stringProp name="67887555">Firma</stringProp>
              <stringProp name="645739530">MEDION AG</stringProp>
              <stringProp name="-615225696">c/o Brodos AG</stringProp>
              <stringProp name="1003322981">ErlangerStr.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
              <stringProp name="48013522">Herr/Frau</stringProp>
              <stringProp name="-872744469">Maximilian</stringProp>
              <stringProp name="-1834305558">Mustermann</stringProp>
              <stringProp name="990162741">Erlanger Str.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without shipmentReferenceNumber, Billing No" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;&#xd;
     &#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
    &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with Null billingNo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:      &#xd;
      {&#xd;
         &quot;billingNo&quot;: &quot;&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
    &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without shipmentReferenceNumber" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
         &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard without Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
        &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
  &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;,&#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
    &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with only Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
         &#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Standard with only Date" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &quot;client&quot;:&quot;${DHLStandardClient}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLStandardProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;${sender.name1}&quot;,&#xd;
      &quot;street&quot;:&quot;${sender.street}&quot;,&#xd;
      &quot;country&quot;:&quot;${sender.country}&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;${sender.isoCountryCode}&quot;,&#xd;
      &quot;postalCode&quot;:&quot;${sender.postalCode}&quot;,&#xd;
      &quot;city&quot;:&quot;${sender.city}&quot;,&#xd;
      &quot;houseNo&quot;:&quot;${sender.houseNo}&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;${sender.phoneNo}&quot;,&#xd;
      &quot;email&quot;:&quot;${sender.email}&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DHL Return  V2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(alg_url)}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(alg_proto)}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__P(alg_path)}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="1187591410">documentFormat</stringProp>
            <stringProp name="-1797003186">printSize</stringProp>
            <stringProp name="1437126153">freightForwarderType</stringProp>
            <stringProp name="-997339593">DHLReturnProduct</stringProp>
            <stringProp name="1799995770">shipmentReferenceNumber</stringProp>
            <stringProp name="1828026780">billingNo</stringProp>
            <stringProp name="681469378">deliveryDate</stringProp>
            <stringProp name="-705557851">deliveryTimeRangeIdentifier</stringProp>
            <stringProp name="-17910476">amountInLowestDenomination</stringProp>
            <stringProp name="575402001">currency</stringProp>
            <stringProp name="1107708910">weightInIntegerRepresentation</stringProp>
            <stringProp name="3594628">unit</stringProp>
            <stringProp name="-725101079">totalNoOfPackages</stringProp>
            <stringProp name="51261331">packageNoOutOfTotalPackages</stringProp>
            <stringProp name="1177837442">deliveryTimestamp</stringProp>
            <stringProp name="1385062852">sender.company</stringProp>
            <stringProp name="-194403827">sender.name1</stringProp>
            <stringProp name="-194403826">sender.name2</stringProp>
            <stringProp name="-1570708004">sender.street</stringProp>
            <stringProp name="1392409821">sender.country</stringProp>
            <stringProp name="385625888">sender.isCountryCode</stringProp>
            <stringProp name="-779435343">sender.postalCode</stringProp>
            <stringProp name="824693124">sender.city</stringProp>
            <stringProp name="1535094344">sender.houseNo</stringProp>
            <stringProp name="-160904938">sender.phoneNo</stringProp>
            <stringProp name="-1759799896">recipient.company</stringProp>
            <stringProp name="1236958961">recipient.name1</stringProp>
            <stringProp name="1236958962">recipient.name2</stringProp>
            <stringProp name="-148134536">recipient.street</stringProp>
            <stringProp name="-1752452927">recipient.country</stringProp>
            <stringProp name="-123475964">recipient.isCountryCode</stringProp>
            <stringProp name="1031033933">recipient.postalCode</stringProp>
            <stringProp name="-376059872">recipient.city</stringProp>
            <stringProp name="-1609768404">recipient.houseNo</stringProp>
            <stringProp name="989199610">recipient.phoneNo</stringProp>
            <stringProp name="-1357712437">client</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-88262194">
              <stringProp name="110834">pdf</stringProp>
              <stringProp name="2069">A6</stringProp>
              <stringProp name="67656">DHL</stringProp>
              <stringProp name="-1628715769">DHL_RETURN</stringProp>
              <stringProp name="1450572544">123145</stringProp>
              <stringProp name="1450575459">123456</stringProp>
              <stringProp name="2081545189">2019-07-06</stringProp>
              <stringProp name="47728">022</stringProp>
              <stringProp name="48690">123</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="1601787">4560</stringProp>
              <stringProp name="103">g</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1579865628">2019-07-0314:40:39+0000</stringProp>
              <stringProp name="67887555">Firma</stringProp>
              <stringProp name="645739530">MEDION AG</stringProp>
              <stringProp name="-615225696">c/o Brodos AG</stringProp>
              <stringProp name="1003322981">ErlangerStr.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
              <stringProp name="48013522">Herr/Frau</stringProp>
              <stringProp name="-872744469">Maximilian</stringProp>
              <stringProp name="-1834305558">Mustermann</stringProp>
              <stringProp name="990162741">Erlanger Str.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
              <stringProp name="65859">BLM</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without shipmentReferenceNumber, Billing No" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,     &#xd;
   &quot;client&quot; :&quot;${client}&quot;,&#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;     &#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with Null billingNo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
     &quot;client&quot; :&quot;${client}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:      &#xd;
      {&#xd;
         &quot;billingNo&quot;: &quot;&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without shipmentReferenceNumber" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
     &quot;client&quot; :&quot;${client}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
         &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
        &quot;client&quot; :&quot;${client}&quot;,&#xd;
         &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
        &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
      &quot;client&quot; :&quot;${client}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;,&#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with only Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
      &quot;client&quot; :&quot;${client}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
         &#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with only Date" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
     &quot;client&quot; :&quot;${client}&quot;,&#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v2/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DHL Return  V1" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(alg_url)}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(alg_proto)}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__P(alg_path)}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="1187591410">documentFormat</stringProp>
            <stringProp name="-1797003186">printSize</stringProp>
            <stringProp name="1437126153">freightForwarderType</stringProp>
            <stringProp name="-997339593">DHLReturnProduct</stringProp>
            <stringProp name="1799995770">shipmentReferenceNumber</stringProp>
            <stringProp name="1828026780">billingNo</stringProp>
            <stringProp name="681469378">deliveryDate</stringProp>
            <stringProp name="-705557851">deliveryTimeRangeIdentifier</stringProp>
            <stringProp name="-17910476">amountInLowestDenomination</stringProp>
            <stringProp name="575402001">currency</stringProp>
            <stringProp name="1107708910">weightInIntegerRepresentation</stringProp>
            <stringProp name="3594628">unit</stringProp>
            <stringProp name="-725101079">totalNoOfPackages</stringProp>
            <stringProp name="51261331">packageNoOutOfTotalPackages</stringProp>
            <stringProp name="1177837442">deliveryTimestamp</stringProp>
            <stringProp name="1385062852">sender.company</stringProp>
            <stringProp name="-194403827">sender.name1</stringProp>
            <stringProp name="-194403826">sender.name2</stringProp>
            <stringProp name="-1570708004">sender.street</stringProp>
            <stringProp name="1392409821">sender.country</stringProp>
            <stringProp name="385625888">sender.isCountryCode</stringProp>
            <stringProp name="-779435343">sender.postalCode</stringProp>
            <stringProp name="824693124">sender.city</stringProp>
            <stringProp name="1535094344">sender.houseNo</stringProp>
            <stringProp name="-160904938">sender.phoneNo</stringProp>
            <stringProp name="-1759799896">recipient.company</stringProp>
            <stringProp name="1236958961">recipient.name1</stringProp>
            <stringProp name="1236958962">recipient.name2</stringProp>
            <stringProp name="-148134536">recipient.street</stringProp>
            <stringProp name="-1752452927">recipient.country</stringProp>
            <stringProp name="-123475964">recipient.isCountryCode</stringProp>
            <stringProp name="1031033933">recipient.postalCode</stringProp>
            <stringProp name="-376059872">recipient.city</stringProp>
            <stringProp name="-1609768404">recipient.houseNo</stringProp>
            <stringProp name="989199610">recipient.phoneNo</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1875339407">
              <stringProp name="110834">pdf</stringProp>
              <stringProp name="2069">A6</stringProp>
              <stringProp name="67656">DHL</stringProp>
              <stringProp name="-1628715769">DHL_RETURN</stringProp>
              <stringProp name="1450572544">123145</stringProp>
              <stringProp name="1450575459">123456</stringProp>
              <stringProp name="2081545189">2019-07-06</stringProp>
              <stringProp name="47728">022</stringProp>
              <stringProp name="48690">123</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="1601787">4560</stringProp>
              <stringProp name="103">g</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1579865628">2019-07-0314:40:39+0000</stringProp>
              <stringProp name="67887555">Firma</stringProp>
              <stringProp name="645739530">MEDION AG</stringProp>
              <stringProp name="-615225696">c/o Brodos AG</stringProp>
              <stringProp name="1003322981">ErlangerStr.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
              <stringProp name="48013522">Herr/Frau</stringProp>
              <stringProp name="-872744469">Maximilian</stringProp>
              <stringProp name="-1834305558">Mustermann</stringProp>
              <stringProp name="990162741">Erlanger Str.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without shipmentReferenceNumber, Billing No" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;     &#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with Null billingNo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
  &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:      &#xd;
      {&#xd;
         &quot;billingNo&quot;: &quot;&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without shipmentReferenceNumber" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
  &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
         &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
      &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
        &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;,&#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with only Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
         &#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with only Date" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
  &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/v1/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DHL Return" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(alg_url)}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(alg_proto)}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__P(alg_path)}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="1187591410">documentFormat</stringProp>
            <stringProp name="-1797003186">printSize</stringProp>
            <stringProp name="1437126153">freightForwarderType</stringProp>
            <stringProp name="-997339593">DHLReturnProduct</stringProp>
            <stringProp name="1799995770">shipmentReferenceNumber</stringProp>
            <stringProp name="1828026780">billingNo</stringProp>
            <stringProp name="681469378">deliveryDate</stringProp>
            <stringProp name="-705557851">deliveryTimeRangeIdentifier</stringProp>
            <stringProp name="-17910476">amountInLowestDenomination</stringProp>
            <stringProp name="575402001">currency</stringProp>
            <stringProp name="1107708910">weightInIntegerRepresentation</stringProp>
            <stringProp name="3594628">unit</stringProp>
            <stringProp name="-725101079">totalNoOfPackages</stringProp>
            <stringProp name="51261331">packageNoOutOfTotalPackages</stringProp>
            <stringProp name="1177837442">deliveryTimestamp</stringProp>
            <stringProp name="1385062852">sender.company</stringProp>
            <stringProp name="-194403827">sender.name1</stringProp>
            <stringProp name="-194403826">sender.name2</stringProp>
            <stringProp name="-1570708004">sender.street</stringProp>
            <stringProp name="1392409821">sender.country</stringProp>
            <stringProp name="385625888">sender.isCountryCode</stringProp>
            <stringProp name="-779435343">sender.postalCode</stringProp>
            <stringProp name="824693124">sender.city</stringProp>
            <stringProp name="1535094344">sender.houseNo</stringProp>
            <stringProp name="-160904938">sender.phoneNo</stringProp>
            <stringProp name="-1759799896">recipient.company</stringProp>
            <stringProp name="1236958961">recipient.name1</stringProp>
            <stringProp name="1236958962">recipient.name2</stringProp>
            <stringProp name="-148134536">recipient.street</stringProp>
            <stringProp name="-1752452927">recipient.country</stringProp>
            <stringProp name="-123475964">recipient.isCountryCode</stringProp>
            <stringProp name="1031033933">recipient.postalCode</stringProp>
            <stringProp name="-376059872">recipient.city</stringProp>
            <stringProp name="-1609768404">recipient.houseNo</stringProp>
            <stringProp name="989199610">recipient.phoneNo</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1875339407">
              <stringProp name="110834">pdf</stringProp>
              <stringProp name="2069">A6</stringProp>
              <stringProp name="67656">DHL</stringProp>
              <stringProp name="-1628715769">DHL_RETURN</stringProp>
              <stringProp name="1450572544">123145</stringProp>
              <stringProp name="1450575459">123456</stringProp>
              <stringProp name="2081545189">2019-07-06</stringProp>
              <stringProp name="47728">022</stringProp>
              <stringProp name="48690">123</stringProp>
              <stringProp name="69026">EUR</stringProp>
              <stringProp name="1601787">4560</stringProp>
              <stringProp name="103">g</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1579865628">2019-07-0314:40:39+0000</stringProp>
              <stringProp name="67887555">Firma</stringProp>
              <stringProp name="645739530">MEDION AG</stringProp>
              <stringProp name="-615225696">c/o Brodos AG</stringProp>
              <stringProp name="1003322981">ErlangerStr.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
              <stringProp name="48013522">Herr/Frau</stringProp>
              <stringProp name="-872744469">Maximilian</stringProp>
              <stringProp name="-1834305558">Mustermann</stringProp>
              <stringProp name="990162741">Erlanger Str.</stringProp>
              <stringProp name="894480131">Deutschland</stringProp>
              <stringProp name="2177">DE</stringProp>
              <stringProp name="54148371">91083</stringProp>
              <stringProp name="1813654331">Baiersdorf</stringProp>
              <stringProp name="1742902">9-13</stringProp>
              <stringProp name="-202231636">09133/77770-0</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without shipmentReferenceNumber, Billing No" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;     &#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;${sender.company}&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with Null billingNo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
  &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:      &#xd;
      {&#xd;
         &quot;billingNo&quot;: &quot;&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without shipmentReferenceNumber" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
  &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
         &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
         &#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return without Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
      &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
        &quot;billingNo&quot;: &quot;${billingNo}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with Date &amp; Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;,&#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with only Time" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
   &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
         &#xd;
         &quot;deliveryTimeRangeIdentifier&quot; :&quot;${deliveryTimeRangeIdentifier}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHL Return with only Date" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;documentFormat&quot;:&quot;${documentFormat}&quot;,&#xd;
   &quot;printSize&quot;:&quot;${printSize}&quot;,&#xd;
  &#xd;
     &#xd;
   &#xd;
   &quot;freightForwarder&quot;:    {&#xd;
      &quot;freightForwarderType&quot;: &quot;${freightForwarderType}&quot;,&#xd;
        &quot;product&quot; :&quot;${DHLReturnProduct}&quot;,&#xd;
      &quot;customProperties&quot;:       {&#xd;
       &quot;shipmentReferenceNumber&quot;:&quot;${shipmentReferenceNumber}&quot;,&#xd;
          &quot;deliveryDate&quot; :&quot;${deliveryDate}&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;freight&quot;:{&#xd;
      &quot;amountInLowestDenomination&quot;:${amountInLowestDenomination},&#xd;
      &quot;currency&quot;:&quot;${currency}&quot;&#xd;
   },&#xd;
   &quot;weight&quot;:{&#xd;
      &quot;weightInIntegerRepresentation&quot;:${weightInIntegerRepresentation},&#xd;
      &quot;unit&quot;:&quot;${unit}&quot;&#xd;
   },&#xd;
   &quot;totalNoOfPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;packageNoOutOfTotalPackages&quot;:${totalNoOfPackages},&#xd;
   &quot;deliveryTimestamp&quot;:&quot;${deliveryTimestamp}&quot;,&#xd;
   &#xd;
   &quot;sender&quot;:{&#xd;
      &quot;company&quot;:&quot;fdsffds&quot;,&#xd;
      &quot;name1&quot;:&quot;Brodos AG&quot;,&#xd;
      &quot;street&quot;:&quot;Erlanger Str.&quot;,&#xd;
      &quot;country&quot;:&quot;Deutschland&quot;,&#xd;
      &quot;isoCountryCode&quot;:&quot;DEU&quot;,&#xd;
      &quot;postalCode&quot;:&quot;91083&quot;,&#xd;
      &quot;city&quot;:&quot;Baiersdorf&quot;,&#xd;
      &quot;houseNo&quot;:&quot;9-13&quot;,&#xd;
      &quot;phoneNo&quot;:&quot;09133/7770-0&quot;,&#xd;
      &quot;email&quot;:&quot;info@my-extra.com&quot;&#xd;
   },&#xd;
    &quot;recipient&quot;: {&#xd;
       &quot;company&quot;: &quot;${recipient.company}&quot;,&#xd;
        &quot;name1&quot;: &quot;${recipient.name1}&quot;,&#xd;
        &quot;name2&quot;: &quot;${recipient.name2}&quot;,&#xd;
        &quot;street&quot;: &quot;${recipient.street}&quot;,&#xd;
        &quot;country&quot;: &quot;${recipient.country}&quot;,&#xd;
        &quot;isoCountryCode&quot;: &quot;${recipient.isCountryCode}&quot;,&#xd;
        &quot;postalCode&quot;: &quot;${recipient.postalCode}&quot;,&#xd;
        &quot;city&quot;: &quot;${recipient.city}&quot;,&#xd;
        &quot;houseNo&quot;: &quot;${recipient.houseNo}&quot;,&#xd;
        &quot;phoneNo&quot;: &quot;${recipient.phoneNo}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">addresslabelgenerator/addresslabel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <sentBytes>true</sentBytes>
            <fileName>true</fileName>
          </value>
        </objProp>
        <stringProp name="filename">${__P(alg_report)}</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename">${__P(alg_report)}</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
